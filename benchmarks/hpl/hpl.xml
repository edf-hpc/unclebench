<?xml version="1.0" encoding="utf-8"?>
<jube>

      <include-path>
            <path> $UBENCH_PLATFORM_DIR </path>
      </include-path>
      <include from="platforms.xml" path="include-path"/>

      <multisource>
            <source protocol="https" name="hpl">
                  <url>http://www.netlib.org/benchmark/</url>
                  <file>/hpl/hpl-2.2.tar.gz</file>
            </source>
      </multisource>

    <benchmark name="hpl" outpath="benchmark_runs">
	<comment>HPL benchmarks</comment>

	<fileset name="source">
            <link> HPL.dat.in</link>
            <link> Make.gnu</link>
            <link> Make.intel</link>
            <prepare>mkdir hpl_source/; tar -xzf ${hpl} -C hpl_source/  --strip-components=1</prepare>
	</fileset>

	<parameterset name="container_parameters">
            <parameter name="container_image">none</parameter>
            <parameter name="container_exec_command" mode="python">
                  ["",
                  "singularity exec ${container_image}"][0 if '$container_image'=='none' else 1]
            </parameter>
	</parameterset>

	<parameterset name="variant_set">
            <parameter name="variant_v">0</parameter>
            <parameter name="variant_name" mode="python">
		["Full_MPI"][$variant_v]
            </parameter>

            <parameter name="variant_NB">
		192
            </parameter>

            <parameter name="memory_proportion">
		0.2
            </parameter>

            <!-- Choose N to avoid exceeding 80% of available memory -->
            <parameter name="variant_Ntemp" mode="python" type="float" separator="??" >
		(${memory_proportion}*${nodes}*(${GB_per_node})*1e9/8) ** 0.5
            </parameter>

            <parameter name="variant_N" mode="python" type="int" separator="??" >
		int( round( ${variant_Ntemp} / ${variant_NB} ) * ${variant_NB})
            </parameter>

            <parameter name="SWAP" mode="python" type="int">
		64
            </parameter>

            <parameter name="DEPTHs" mode="python" type="int">
		1
            </parameter>

            <parameter name="BCASTs" mode="python" type="int">
		1
            </parameter>

            <parameter name="RFACTs" mode="python" type="int">
		1
            </parameter>

            <parameter name="NDIVs" mode="python" type="int">
		2
            </parameter>

            <parameter name="NBMINs" mode="python" type="int">
		4
            </parameter>

	</parameterset>

	<parameterset name="compiler_opts">
            <parameter name="arch" type="string">
		${comp_version}
            </parameter>
	</parameterset>

	<!-- =====================  Compile  ===================== -->
	<step name="compile" export="true">

            <use> container_parameters </use>
            <!-- Choose compiler and MPI versions -->
            <use from="platform.xml"> compiler_set </use>
            <use from="platform.xml"> mpi_set </use>
            <use> compiler_opts </use>
            <use> source </use>
            <!-- substitute compiler in makefile -->
            <!-- Load environment -DUSING_FFTW-->
            <do> module purge </do>
            <do> module load $module_compile $module_mpi $module_blas </do>

            <do work_dir="hpl_source">
		export LD_LIBRARY_PATH=${blas_root}/lib:$LD_LIBRARY_PATH;
		cp ../Make.* .
		${container_exec_command} make arch=${arch} CC=${mpi_cc} BLAS_ROOT=${blas_root}
		cp ./bin/${arch}/xhpl ./bin/.
            </do>

	</step>

	<!-- ====================  Execute  ===================== -->

	<fileset name="binaries">
            <link rel_path_ref="internal" directory="compile/hpl_source/bin">
		xhpl
            </link>
            <link>pq_script.py</link>
	</fileset>

	<substituteset name="sub_hpl_parameters">
            <iofile in="compile/HPL.dat.in" out="HPL.dat"/>
            <sub source="#PBSIZE#" dest="1"/>
            <sub source="#NNS#" dest="$variant_N"/>
            <sub source="#NNBS#" dest="1"/>
            <sub source="#NBS#" dest="$variant_NB"/>
            <sub source="#NBMINs#" dest="$NBMINs"/>
            <sub source="#NDIVs#" dest="$NDIVs"/>
            <sub source="#RFACTs#" dest="$RFACTs"/>
            <sub source="#BCASTs#" dest="$BCASTs"/>
            <sub source="#DPTH#" dest="$DEPTHs"/>
            <sub source="#SWAP#" dest="$SWAP"/>
	</substituteset>

	<parameterset name="system_parameters" init_with="platform.xml">
            <parameter name="nodes" type="int">1</parameter>
            <parameter name="taskspernode" mode="python" type="int">$NUMA_regions*$cores_per_NUMA_region</parameter>
            <parameter name="threadspertask" type="int">1</parameter>
            <parameter name="executable">${container_exec_command} ./xhpl</parameter>
            <parameter name="modules">$module_compile $module_mpi $module_blas</parameter>
            <parameter name="timelimit">24:00:00</parameter>
	</parameterset>

	<parameterset name="execute_set" init_with="platform.xml">

            <parameter name="args_starter" separator="??">
		${binding_full_node}
            </parameter>

	</parameterset>

	<step name="execute" depend="compile">

            <use> container_parameters </use>
            <use from="platform.xml">cluster_specs</use>
            <use>binaries</use>
            <use>sub_hpl_parameters</use>

            <use>execute_set</use>
            <use>system_parameters</use>
            <use>variant_set</use>

            <use from="platform.xml">jobfiles</use>
            <use from="platform.xml">execute_sub</use>

            <do> ./pq_script.py $tasks </do>

            <do done_file="$done_file">$submit $submit_script</do>

	</step>

	<!-- =====================  Analyze  ===================== -->

	<patternset name="pattern">
            <pattern name="HPL" type="float" unit="Gflop/s">
		^W.*(\d+[\.]\d+e[+-]\d+)
            </pattern>
	</patternset>


	<analyzer name="analyse">
            <use>pattern</use>
            <analyse step="execute"><file>HPL.out</file></analyse>
	</analyzer>

	<!-- =====================  Result  ===================== -->

	<result>
            <use>analyse</use>
            <table name="result" style="csv" sort="nodes">
		<column>nodes</column>
		<column>HPL</column>
            <column>mpi_version</column>
		<column>modules</column>
		<column>container_image</column>
            </table>
	</result>

    </benchmark>
</jube>
